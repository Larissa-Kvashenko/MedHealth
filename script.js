window.onload = function() {
    var c=document.getElementById("myCanvas");
    var ctx=c.getContext("2d");
    var img = document.getElementById("logologo");
    ctx.drawImage(img,0,0,105,100);
};

function openElement(element){
	document.getElementById(element).style.opacity = 1;
};

var elements = document.querySelectorAll('textarea');//Все эл-ты в доке у которых есть textarea 
//Возвращает список элементов в пределах документа 
//(поиск осуществляется в пределах указанного элемента) которые соответствуют 
//указанной группе селекторов. Возвращает объект типа NodeList.
for (var i=0; i<elements.length; i++) { //Работает пока не закончатся все найденные эл-ты
//Длина массива: число, 
//на единицу превосходящее максимальный индекс массива
 (function(element) {
   var id = null;//
   // возвращает значение указанного атрибута элемента. К конкретному эл-ту
   //Если элемент не содержит данный атрибут, могут быть возвращены null или "" (пустая строка); 
   element.value = localStorage.getItem(id); //значение принятого эл-та = значению ключа,
                                            //который принимает ид как ключ,
                                            //берет ключ и возвращает значение этого ключа
   // Если в метод getItem() интерфейса Storage передать 
   //ключ в качестве параметра, то метод вернет значение, которое лежащее в хранилище по указанному ключу.
   element.oninput = function() { //функция при вводе в ЛС устанав-ся новый эл-т
   //Триггер при изменении элемента <input> или <textarea>.
     localStorage.setItem(id, element.value);//внести  в базу, принимает ид-ключ и значение

     //Если методу setItem() интерфейса Storage передать ключ и 
     //значение, то в хранилище будет добавлено соответсвтующее ключу значение, 
     //либо, если запись уже есть в хранилище, то значение по ключу будет обновлено.
   };
 })
 (elements[i])//Моментальный вызов функции выше.
}
